<?php

/**
 * This is the model base class for the table "{{post}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PostModel".
 *
 * Columns in table "{{post}}" available as properties of the model,
 * followed by relations of table "{{post}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $intro_text
 * @property string $content
 * @property string $tags
 * @property integer $status
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $author_id
 *
 * @property UserWeb $author
 */
abstract class BasePostModel extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{post}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PostModel|PostModels', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, content, status, author_id', 'required'),
			array('status, author_id', 'numerical', 'integerOnly'=>true),
			array('title', 'length', 'max'=>128),
			array('intro_text, tags', 'safe'),
			array('intro_text, tags, create_time, update_time', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, intro_text, content, tags, status, create_time, update_time, author_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'author' => array(self::BELONGS_TO, 'UserWeb', 'author_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'intro_text' => Yii::t('app', 'Intro Text'),
			'content' => Yii::t('app', 'Content'),
			'tags' => Yii::t('app', 'Tags'),
			'status' => Yii::t('app', 'Status'),
			'create_time' => Yii::t('app', 'Create Time'),
			'update_time' => Yii::t('app', 'Update Time'),
			'author_id' => null,
			'author' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('intro_text', $this->intro_text, true);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('tags', $this->tags, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('create_time', $this->create_time);
		$criteria->compare('update_time', $this->update_time);
		$criteria->compare('author_id', $this->author_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}